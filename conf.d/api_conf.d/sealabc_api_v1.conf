# Routing
location / {
    # Policy configuration here (authentication, rate limiting, logging...)
    limit_req zone=myRateLimit burst=200 nodelay;
    limit_req_status 429;
    access_log /var/log/nginx/sealabc_api_v1.log main;
    
    location /api/v1/call/application {
        limit_except POST {
            deny all;
        }
        error_page 403 = @405;

        set $upstream '';                                                
        access_by_lua '
            function getFile(file_name)
                local f = assert(io.open(file_name, "r"))
                local string = f:read("*all")
                f:close()
                return string
            end
            ngx.req.read_body()                                          
            local data = ngx.req.get_body_data()                         
            if nil == data then
                local file_name = ngx.req.get_body_file()
                if file_name then
                    data = getFile(file_name)
                end
            end

            local match, err = ngx.re.match(data, "CreateContract")
            if match then
                ngx.var.upstream = "127.0.0.1:10415"
            else
                ngx.var.upstream = "sealabc_nodes"
            end
        ';

        proxy_pass http://${upstream}${request_uri};
    }

    location /api/v1/query/application {
        limit_except POST {
            deny all;
        }
        error_page 403 = @405;

        proxy_pass http://sealabc_nodes;
    }


    location /api/v1/get {
        limit_except GET {
            deny all;
        }
        error_page 403 = @405;

        proxy_pass http://sealabc_nodes;
    }

}
